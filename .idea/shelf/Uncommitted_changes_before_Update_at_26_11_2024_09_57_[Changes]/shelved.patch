Index: app/src/main/java/com/example/musicwhisky1/view/AppNavigation.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.musicwhisky1.view\r\n\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.ui.platform.LocalContext\r\nimport androidx.lifecycle.viewmodel.compose.viewModel\r\nimport androidx.navigation.NavHostController\r\nimport androidx.navigation.compose.NavHost\r\nimport androidx.navigation.compose.composable\r\nimport androidx.navigation.compose.rememberNavController\r\nimport androidx.room.Room\r\nimport com.example.musicwhisky1.dao.AlbumDao\r\nimport com.example.musicwhisky1.dao.ArtistaDao\r\nimport com.example.musicwhisky1.dao.MusicaDao\r\nimport com.example.musicwhisky1.view.TelaInicial\r\nimport com.example.musicwhisky1.view.TelaGerenciamento\r\nimport com.example.musicwhisky1.viewmodel.AlbumVMFactory\r\nimport com.example.musicwhisky1.viewmodel.ArtistaVMFactory\r\nimport com.example.musicwhisky1.viewmodel.MusicaVMFactory\r\nimport com.example.mvvm2.model.database.AppDB\r\nimport com.example.mvvm2.viewmodel.AlbumVM\r\nimport com.example.mvvm2.viewmodel.ArtistaVM\r\nimport com.example.mvvm2.viewmodel.MusicaVM\r\n\r\n\r\n@Composable\r\nfun AppNavigation(\r\n    navController: NavHostController,\r\n    artistaDao: ArtistaDao,\r\n    albumDao: AlbumDao,\r\n    musicaDao: MusicaDao\r\n) {\r\n    NavHost(navController = navController, startDestination = \"home\") {\r\n\r\n        // Tela inicial\r\n        composable(\"home\") {\r\n            TelaInicial(navController)\r\n        }\r\n\r\n        // Tela de cadastro de artista\r\n        composable(\"gerenciamentoArtista\") {\r\n            val artistaFactory = ArtistaVMFactory(artistaDao)\r\n            val artistaVM: ArtistaVM = viewModel(factory = artistaFactory)\r\n            TelaGerenciamentoArtista(navController, artistaVM)\r\n        }\r\n\r\n        // Tela de cadastro de álbum\r\n        composable(\"gerenciamentoAlbum\") {\r\n            val albumFactory = AlbumVMFactory(albumDao, artistaDao)\r\n            val albumVM: AlbumVM = viewModel(factory = albumFactory)\r\n\r\n            // Instanciando o ArtistaVM diretamente\r\n            val artistaFactory = ArtistaVMFactory(artistaDao)\r\n            val artistaVM: ArtistaVM = viewModel(factory = artistaFactory)\r\n\r\n            TelaGerenciamentoAlbum(navController, albumVM, artistaVM)\r\n        }\r\n\r\n        // Tela de gerenciamento geral\r\n        composable(\"gerenciamento\") {\r\n            TelaGerenciamento(navController)\r\n        }\r\n\r\n        // Tela de cadastro de música\r\n        composable(\"gerenciamentoMusica\") {\r\n            val albumFactory = AlbumVMFactory(albumDao, artistaDao)\r\n            val albumVM: AlbumVM = viewModel(factory = albumFactory)\r\n\r\n            val artistaFactory = ArtistaVMFactory(artistaDao)\r\n            val artistaVM: ArtistaVM = viewModel(factory = artistaFactory)\r\n\r\n            val musicaFactory = MusicaVMFactory(musicaDao, albumDao, artistaDao)\r\n            val musicaVM: MusicaVM = viewModel(factory = musicaFactory)\r\n\r\n            TelaGerenciamentoMusica(navController, musicaVM, artistaVM, albumVM)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/musicwhisky1/view/AppNavigation.kt b/app/src/main/java/com/example/musicwhisky1/view/AppNavigation.kt
--- a/app/src/main/java/com/example/musicwhisky1/view/AppNavigation.kt	(revision 89517d98da5a77e7a990364af177ada55ea046f8)
+++ b/app/src/main/java/com/example/musicwhisky1/view/AppNavigation.kt	(date 1732580419584)
@@ -5,75 +5,76 @@
 import androidx.compose.ui.platform.LocalContext
 import androidx.lifecycle.viewmodel.compose.viewModel
 import androidx.navigation.NavHostController
+import androidx.navigation.NavType
 import androidx.navigation.compose.NavHost
 import androidx.navigation.compose.composable
 import androidx.navigation.compose.rememberNavController
+import androidx.navigation.navArgument
 import androidx.room.Room
+import com.example.musicwhisky1.api.PlaylistDetailsScreen
 import com.example.musicwhisky1.dao.AlbumDao
 import com.example.musicwhisky1.dao.ArtistaDao
 import com.example.musicwhisky1.dao.MusicaDao
-import com.example.musicwhisky1.view.TelaInicial
 import com.example.musicwhisky1.view.TelaGerenciamento
 import com.example.musicwhisky1.viewmodel.AlbumVMFactory
 import com.example.musicwhisky1.viewmodel.ArtistaVMFactory
 import com.example.musicwhisky1.viewmodel.MusicaVMFactory
+import com.example.musicwhisky1.viewmodel.SpotifyVM
 import com.example.mvvm2.model.database.AppDB
 import com.example.mvvm2.viewmodel.AlbumVM
 import com.example.mvvm2.viewmodel.ArtistaVM
 import com.example.mvvm2.viewmodel.MusicaVM
 
-
 @Composable
 fun AppNavigation(
     navController: NavHostController,
     artistaDao: ArtistaDao,
     albumDao: AlbumDao,
-    musicaDao: MusicaDao
+    musicaDao: MusicaDao,
+    spotifyVM: SpotifyVM// Passa a ViewModel aqui
 ) {
     NavHost(navController = navController, startDestination = "home") {
 
         // Tela inicial
         composable("home") {
-            TelaInicial(navController)
+            TelaInicial(navController) // Passa a ViewModel
+        }
+
+        // Tela de gerenciamento geral
+        composable("gerenciamento") {
+            TelaGerenciamento(navController)
         }
 
-        // Tela de cadastro de artista
+        // Tela de gerenciamento de artista
         composable("gerenciamentoArtista") {
-            val artistaFactory = ArtistaVMFactory(artistaDao)
-            val artistaVM: ArtistaVM = viewModel(factory = artistaFactory)
+            val artistaVM: ArtistaVM = viewModel(factory = ArtistaVMFactory(artistaDao))
             TelaGerenciamentoArtista(navController, artistaVM)
         }
 
-        // Tela de cadastro de álbum
+        // Tela de gerenciamento de álbuns
         composable("gerenciamentoAlbum") {
-            val albumFactory = AlbumVMFactory(albumDao, artistaDao)
-            val albumVM: AlbumVM = viewModel(factory = albumFactory)
-
-            // Instanciando o ArtistaVM diretamente
-            val artistaFactory = ArtistaVMFactory(artistaDao)
-            val artistaVM: ArtistaVM = viewModel(factory = artistaFactory)
-
+            val artistaVM: ArtistaVM = viewModel(factory = ArtistaVMFactory(artistaDao))
+            val albumVM: AlbumVM = viewModel(factory = AlbumVMFactory(albumDao, artistaDao))
             TelaGerenciamentoAlbum(navController, albumVM, artistaVM)
         }
 
-        // Tela de gerenciamento geral
-        composable("gerenciamento") {
-            TelaGerenciamento(navController)
-        }
-
-        // Tela de cadastro de música
+        // Tela de gerenciamento de músicas
         composable("gerenciamentoMusica") {
-            val albumFactory = AlbumVMFactory(albumDao, artistaDao)
-            val albumVM: AlbumVM = viewModel(factory = albumFactory)
-
-            val artistaFactory = ArtistaVMFactory(artistaDao)
-            val artistaVM: ArtistaVM = viewModel(factory = artistaFactory)
 
-            val musicaFactory = MusicaVMFactory(musicaDao, albumDao, artistaDao)
-            val musicaVM: MusicaVM = viewModel(factory = musicaFactory)
-
+            val artistaVM: ArtistaVM = viewModel(factory = ArtistaVMFactory(artistaDao))
+            val albumVM: AlbumVM = viewModel(factory = AlbumVMFactory(albumDao, artistaDao))
+            val musicaVM: MusicaVM = viewModel(factory = MusicaVMFactory(musicaDao, albumDao, artistaDao))
             TelaGerenciamentoMusica(navController, musicaVM, artistaVM, albumVM)
         }
+
+        // Tela de detalhes da playlist
+        composable(
+            route = "playlistTracks/{playlistId}",
+            arguments = listOf(navArgument("playlistId") { type = NavType.StringType })
+        ) { backStackEntry ->
+            val playlistId = backStackEntry.arguments?.getString("playlistId").orEmpty()
+            PlaylistDetailsScreen(navController, playlistId)
+        }
     }
 }
 
Index: app/src/main/java/com/example/musicwhisky1/view/TelaInicial.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.musicwhisky1.view\r\n\r\nimport androidx.compose.foundation.layout.*\r\nimport androidx.compose.material3.Button\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.*\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.navigation.NavController\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.example.musicwhisky1.ui.SearchBar\r\n\r\n@Composable\r\nfun TelaInicial(navController: NavController) {\r\n\r\n    var query by remember { mutableStateOf(\"\") }\r\n\r\n\r\n    SearchBar(\r\n        query = query,\r\n        onQueryChange = { newQuery -> query = newQuery }\r\n    )\r\n\r\n\r\n    Column(\r\n        modifier = Modifier\r\n            .fillMaxSize()\r\n            .padding(16.dp),\r\n        verticalArrangement = Arrangement.Bottom\r\n    ) {\r\n\r\n        Button(\r\n            onClick = {\r\n                navController.navigate(\"gerenciamento\")\r\n            },\r\n            modifier = Modifier\r\n                .align(Alignment.CenterHorizontally)\r\n                .padding(bottom = 32.dp),\r\n        ) {\r\n            Text(\"Ir para gerenciamento\")\r\n        }\r\n\r\n    }\r\n}\r\n\r\n@Preview(showBackground = true)\r\n@Composable\r\nfun PreviewTelaInicial() {\r\n    TelaInicial(navController = rememberNavController())\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/musicwhisky1/view/TelaInicial.kt b/app/src/main/java/com/example/musicwhisky1/view/TelaInicial.kt
--- a/app/src/main/java/com/example/musicwhisky1/view/TelaInicial.kt	(revision 89517d98da5a77e7a990364af177ada55ea046f8)
+++ b/app/src/main/java/com/example/musicwhisky1/view/TelaInicial.kt	(date 1732595724313)
@@ -1,52 +1,150 @@
 package com.example.musicwhisky1.view
 
+import android.util.Log
+import androidx.compose.foundation.Image
+import androidx.compose.foundation.clickable
 import androidx.compose.foundation.layout.*
+import androidx.compose.foundation.lazy.LazyColumn
+import androidx.compose.foundation.lazy.items
 import androidx.compose.material3.Button
+import androidx.compose.material3.CircularProgressIndicator
 import androidx.compose.material3.Text
+import androidx.compose.material3.TextButton
 import androidx.compose.runtime.*
 import androidx.compose.ui.Alignment
 import androidx.compose.ui.Modifier
-import androidx.compose.ui.tooling.preview.Preview
+import androidx.compose.ui.graphics.Color
+import androidx.compose.ui.text.style.TextAlign
 import androidx.compose.ui.unit.dp
 import androidx.navigation.NavController
-import androidx.navigation.compose.rememberNavController
+import com.example.musicwhisky1.api.Artist
+import com.example.musicwhisky1.api.Playlist
+import com.example.musicwhisky1.api.SpotifyApiClient
+import com.example.musicwhisky1.api.SpotifyAuth
+import com.example.musicwhisky1.api.SpotifyService
 import com.example.musicwhisky1.ui.SearchBar
+import androidx.compose.ui.tooling.preview.Preview
+import androidx.compose.ui.unit.sp
+import androidx.lifecycle.viewmodel.compose.viewModel
+import coil.compose.rememberImagePainter
+import com.example.musicwhisky1.ui.ArtistDialog
+import com.example.musicwhisky1.viewmodel.SpotifyVM
+import kotlinx.coroutines.delay
 
 @Composable
 fun TelaInicial(navController: NavController) {
+    val spotifyVM: SpotifyVM = viewModel()
+
+    val artists by spotifyVM.artists
+    val playlists by spotifyVM.playlists
+    val errorMessage by spotifyVM.errorMessage
+    val isLoading by spotifyVM.isLoading
 
     var query by remember { mutableStateOf("") }
+    var isInitialLoading by remember { mutableStateOf(true) }
+    var isDialogOpen by remember { mutableStateOf(false) }
+
+    LaunchedEffect(Unit) {
+        delay(1500)
 
+        spotifyVM.fetchAccessToken()
+        if (spotifyVM._accessToken != null) {
+            spotifyVM.fetchPlaylists()
+        } else {
+            spotifyVM._errorMessage.value = "Token de acesso não disponível"
+        }
+
+        isInitialLoading = false
+    }
+
+    Column(modifier = Modifier.fillMaxSize().padding(16.dp)) {
+        // Indicador de carregamento no centro da tela
+        if (isInitialLoading || isLoading) {
+            Box(
+                modifier = Modifier.fillMaxSize(),
+                contentAlignment = Alignment.Center
+            ) {
+                CircularProgressIndicator()
+            }
+        } else {
 
-    SearchBar(
-        query = query,
-        onQueryChange = { newQuery -> query = newQuery }
-    )
+            SearchBar(
+                query = query,
+                onQueryChange = { query = it },
+                onSearch = {
+                    // Passando a função de busca diretamente
+                    spotifyVM.searchArtists(it)
+                    isDialogOpen = artists.isNotEmpty()  // Abre o dialog se houver artistas encontrados
+                }
+            )
 
+            Spacer(modifier = Modifier.height(32.dp))
+
+            Text(
+                text = "Bem-vindo ao MusicWhisky!",
+                color = Color(242, 5, 68),
+                fontSize = 20.sp,
+                fontWeight = androidx.compose.ui.text.font.FontWeight.Bold,
+                modifier = Modifier
+                    .fillMaxWidth()
+                    .padding(top = 8.dp),
+                textAlign = TextAlign.Center
+            )
 
-    Column(
-        modifier = Modifier
-            .fillMaxSize()
-            .padding(16.dp),
-        verticalArrangement = Arrangement.Bottom
-    ) {
+            Spacer(modifier = Modifier.height(16.dp))
+
+            errorMessage?.let {
+                Text(text = "Erro: $it", color = Color.Red)
+            }
+
+            if (isDialogOpen) {
+                ArtistDialog(artists = artists, onDismiss = { isDialogOpen = false })
+            }
+
+            if (playlists.isNotEmpty()) {
+                Spacer(modifier = Modifier.height(24.dp))
+                LazyColumn(verticalArrangement = Arrangement.spacedBy(16.dp)) {
+                    items(playlists.chunked(2)) { playlistPair ->
+                        Row(
+                            modifier = Modifier.fillMaxWidth(),
+                            horizontalArrangement = Arrangement.spacedBy(16.dp),
+                            verticalAlignment = Alignment.CenterVertically
+                        ) {
+                            playlistPair.forEach { playlist ->
+                                Column(
+                                    modifier = Modifier
+                                        .weight(1f)  // Garantir que cada item ocupe o mesmo espaço
+                                        .clickable {
+                                            navController.navigate("playlistTracks/${playlist.id}")
+                                        },
+                                    horizontalAlignment = Alignment.CenterHorizontally
+                                ) {
+                                    playlist.images.firstOrNull()?.let { image ->
+                                        Image(
+                                            painter = rememberImagePainter(image.url),
+                                            contentDescription = "Imagem da playlist",
+                                            modifier = Modifier.size(150.dp)
+                                        )
+                                    }
+                                    Spacer(modifier = Modifier.height(8.dp))
+                                    Text(
+                                        text = playlist.name,
+                                        color = Color(254, 254, 228),
+                                        fontSize = 18.sp, // Fonte maior
+                                        modifier = Modifier.align(Alignment.CenterHorizontally)
+                                    )
+                                }
+                            }
+                        }
+                    }
+                }
+            }
 
-        Button(
-            onClick = {
-                navController.navigate("gerenciamento")
-            },
-            modifier = Modifier
-                .align(Alignment.CenterHorizontally)
-                .padding(bottom = 32.dp),
-        ) {
-            Text("Ir para gerenciamento")
+            Spacer(modifier = Modifier.weight(1f))
+            Button(onClick = { navController.navigate("gerenciamento") }, modifier = Modifier.align(Alignment.CenterHorizontally)) {
+                Text("Ir para gerenciamento")
+            }
         }
-
     }
 }
 
-@Preview(showBackground = true)
-@Composable
-fun PreviewTelaInicial() {
-    TelaInicial(navController = rememberNavController())
-}
Index: app/src/main/java/com/example/musicwhisky1/view/TelaCadastro.kt
===================================================================
diff --git a/app/src/main/java/com/example/musicwhisky1/view/TelaCadastro.kt b/app/src/main/java/com/example/musicwhisky1/view/TelaCadastro.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/musicwhisky1/view/TelaCadastro.kt	(revision 89517d98da5a77e7a990364af177ada55ea046f8)
+++ /dev/null	(revision 89517d98da5a77e7a990364af177ada55ea046f8)
@@ -1,222 +0,0 @@
-package com.example.musicwhisky1.view
-
-import androidx.compose.foundation.layout.*
-import androidx.compose.material.icons.Icons
-import androidx.compose.material.icons.filled.ArrowDropDown
-import androidx.compose.material3.*
-import androidx.compose.runtime.*
-import androidx.compose.ui.Alignment
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.tooling.preview.Preview
-import androidx.compose.ui.unit.dp
-import androidx.navigation.NavController
-import androidx.navigation.compose.rememberNavController
-
-@Composable
-fun TelaCadastro(navController: NavController) {
-    var selectedOption by remember { mutableStateOf("Artista") }
-
-    // Estados para armazenar os dados do formulário
-    var nomeArtista by remember { mutableStateOf("") }
-    var nomeAlbum by remember { mutableStateOf("") }
-    var nomeMusica by remember { mutableStateOf("") }
-    var quantidadeMusicas by remember { mutableStateOf("") }
-    var duracao by remember { mutableStateOf("") }
-    var dataLancamento by remember { mutableStateOf("") }
-    var genero by remember { mutableStateOf("") }
-
-    // Listas para dropdowns
-    val artistas = listOf("Artista 1", "Artista 2", "Artista 3")
-    val albuns = listOf("Álbum 1", "Álbum 2", "Álbum 3")
-
-    var artistaSelecionado by remember { mutableStateOf("") }
-    var albumSelecionado by remember { mutableStateOf("") }
-
-    Column(
-        modifier = Modifier
-            .fillMaxSize()
-            .padding(16.dp),
-        horizontalAlignment = Alignment.CenterHorizontally
-    ) {
-        Text(
-            text = "Cadastrar ${selectedOption}",
-            style = MaterialTheme.typography.titleLarge,
-            modifier = Modifier.padding(bottom = 16.dp)
-        )
-
-        // Botões para selecionar o que cadastrar
-        Row(horizontalArrangement = Arrangement.SpaceEvenly, modifier = Modifier.fillMaxWidth()) {
-            Button(onClick = { selectedOption = "Artista" }) {
-                Text("Artista")
-            }
-            Button(onClick = { selectedOption = "Álbum" }) {
-                Text("Álbum")
-            }
-            Button(onClick = { selectedOption = "Música" }) {
-                Text("Música")
-            }
-        }
-
-        Spacer(modifier = Modifier.height(16.dp))
-
-        // Formulário dinâmico
-        when (selectedOption) {
-            "Artista" -> {
-                TextField(
-                    value = nomeArtista,
-                    onValueChange = { nomeArtista = it },
-                    label = { Text("Nome do Artista ou Banda") },
-                    modifier = Modifier.fillMaxWidth()
-                )
-            }
-            "Álbum" -> {
-                TextField(
-                    value = nomeAlbum,
-                    onValueChange = { nomeAlbum = it },
-                    label = { Text("Nome do Álbum") },
-                    modifier = Modifier.fillMaxWidth()
-                )
-                Spacer(modifier = Modifier.height(8.dp))
-                TextField(
-                    value = quantidadeMusicas,
-                    onValueChange = { quantidadeMusicas = it },
-                    label = { Text("Quantidade de Músicas") },
-                    modifier = Modifier.fillMaxWidth()
-                )
-                Spacer(modifier = Modifier.height(8.dp))
-                TextField(
-                    value = dataLancamento,
-                    onValueChange = { dataLancamento = it },
-                    label = { Text("Data de Lançamento") },
-                    modifier = Modifier.fillMaxWidth()
-                )
-                Spacer(modifier = Modifier.height(8.dp))
-                TextField(
-                    value = genero,
-                    onValueChange = { genero = it },
-                    label = { Text("Gênero") },
-                    modifier = Modifier.fillMaxWidth()
-                )
-                Spacer(modifier = Modifier.height(8.dp))
-                // Dropdown para seleção do Artista
-                DropdownMenuField(
-                    label = "Artista",
-                    items = artistas,
-                    selectedItem = artistaSelecionado,
-                    onItemSelected = { artistaSelecionado = it }
-                )
-            }
-            "Música" -> {
-                TextField(
-                    value = nomeMusica,
-                    onValueChange = { nomeMusica = it },
-                    label = { Text("Nome da Música") },
-                    modifier = Modifier.fillMaxWidth()
-                )
-                Spacer(modifier = Modifier.height(8.dp))
-                // Dropdown para seleção do Artista
-                DropdownMenuField(
-                    label = "Artista",
-                    items = artistas,
-                    selectedItem = artistaSelecionado,
-                    onItemSelected = { artistaSelecionado = it }
-                )
-                Spacer(modifier = Modifier.height(8.dp))
-                // Dropdown para seleção do Álbum
-                DropdownMenuField(
-                    label = "Álbum",
-                    items = albuns,
-                    selectedItem = albumSelecionado,
-                    onItemSelected = { albumSelecionado = it }
-                )
-                Spacer(modifier = Modifier.height(8.dp))
-                TextField(
-                    value = duracao,
-                    onValueChange = { duracao = it },
-                    label = { Text("Duração Total") },
-                    modifier = Modifier.fillMaxWidth()
-                )
-            }
-        }
-
-        Spacer(modifier = Modifier.height(16.dp))
-
-        // Botão de cadastro
-        Button(
-            onClick = {
-                when (selectedOption) {
-                    "Artista" -> {
-                        println("Cadastrando Artista: Nome = $nomeArtista")
-                    }
-                    "Álbum" -> {
-                        println("Cadastrando Álbum: Nome = $nomeAlbum, Artista = $artistaSelecionado")
-                    }
-                    "Música" -> {
-                        println("Cadastrando Música: Nome = $nomeMusica, Artista = $artistaSelecionado, Álbum = $albumSelecionado")
-                    }
-                }
-            },
-            modifier = Modifier.align(Alignment.CenterHorizontally)
-        ) {
-            Text("Cadastrar ${selectedOption}")
-        }
-
-        Spacer(modifier = Modifier.height(16.dp))
-
-        // Botão para voltar à tela inicial
-        Button(
-            onClick = { navController.navigate("home") },
-            modifier = Modifier.align(Alignment.CenterHorizontally)
-        ) {
-            Text("Voltar para Tela Inicial")
-        }
-    }
-}
-
-@Composable
-fun DropdownMenuField(
-    label: String,
-    items: List<String>,
-    selectedItem: String,
-    onItemSelected: (String) -> Unit
-) {
-    var expanded by remember { mutableStateOf(false) }
-
-    Box(modifier = Modifier.fillMaxWidth()) {
-        TextField(
-            value = selectedItem,
-            onValueChange = {},
-            label = { Text(label) },
-            modifier = Modifier.fillMaxWidth(),
-            readOnly = true,
-            trailingIcon = {
-                IconButton(onClick = { expanded = !expanded }) {
-                    Icon(
-                        imageVector = Icons.Default.ArrowDropDown,
-                        contentDescription = null
-                    )
-                }
-            }
-        )
-        DropdownMenu(
-            expanded = expanded,
-            onDismissRequest = { expanded = false }
-        ) {
-            items.forEach { item ->
-                DropdownMenuItem(
-                    text = { Text(text = item) },
-                    onClick = {
-                        onItemSelected(item)
-                        expanded = false
-                    }
-                )
-            }
-        }
-    }
-}
-
-@Preview(showBackground = true)
-@Composable
-fun PreviewTelaCadastro() {
-    TelaCadastro(navController = rememberNavController())
-}
Index: .idea/other.xml
===================================================================
diff --git a/.idea/other.xml b/.idea/other.xml
deleted file mode 100644
--- a/.idea/other.xml	(revision 89517d98da5a77e7a990364af177ada55ea046f8)
+++ /dev/null	(revision 89517d98da5a77e7a990364af177ada55ea046f8)
@@ -1,329 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="direct_access_persist.xml">
-    <option name="deviceSelectionList">
-      <list>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="27" />
-          <option name="brand" value="DOCOMO" />
-          <option name="codename" value="F01L" />
-          <option name="id" value="F01L" />
-          <option name="manufacturer" value="FUJITSU" />
-          <option name="name" value="F-01L" />
-          <option name="screenDensity" value="360" />
-          <option name="screenX" value="720" />
-          <option name="screenY" value="1280" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="28" />
-          <option name="brand" value="DOCOMO" />
-          <option name="codename" value="SH-01L" />
-          <option name="id" value="SH-01L" />
-          <option name="manufacturer" value="SHARP" />
-          <option name="name" value="AQUOS sense2 SH-01L" />
-          <option name="screenDensity" value="480" />
-          <option name="screenX" value="1080" />
-          <option name="screenY" value="2160" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="34" />
-          <option name="brand" value="Lenovo" />
-          <option name="codename" value="TB370FU" />
-          <option name="id" value="TB370FU" />
-          <option name="manufacturer" value="Lenovo" />
-          <option name="name" value="Tab P12" />
-          <option name="screenDensity" value="340" />
-          <option name="screenX" value="1840" />
-          <option name="screenY" value="2944" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="31" />
-          <option name="brand" value="samsung" />
-          <option name="codename" value="a51" />
-          <option name="id" value="a51" />
-          <option name="manufacturer" value="Samsung" />
-          <option name="name" value="Galaxy A51" />
-          <option name="screenDensity" value="420" />
-          <option name="screenX" value="1080" />
-          <option name="screenY" value="2400" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="34" />
-          <option name="brand" value="google" />
-          <option name="codename" value="akita" />
-          <option name="id" value="akita" />
-          <option name="manufacturer" value="Google" />
-          <option name="name" value="Pixel 8a" />
-          <option name="screenDensity" value="420" />
-          <option name="screenX" value="1080" />
-          <option name="screenY" value="2400" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="33" />
-          <option name="brand" value="samsung" />
-          <option name="codename" value="b0q" />
-          <option name="id" value="b0q" />
-          <option name="manufacturer" value="Samsung" />
-          <option name="name" value="Galaxy S22 Ultra" />
-          <option name="screenDensity" value="600" />
-          <option name="screenX" value="1440" />
-          <option name="screenY" value="3088" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="32" />
-          <option name="brand" value="google" />
-          <option name="codename" value="bluejay" />
-          <option name="id" value="bluejay" />
-          <option name="manufacturer" value="Google" />
-          <option name="name" value="Pixel 6a" />
-          <option name="screenDensity" value="420" />
-          <option name="screenX" value="1080" />
-          <option name="screenY" value="2400" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="34" />
-          <option name="brand" value="google" />
-          <option name="codename" value="caiman" />
-          <option name="id" value="caiman" />
-          <option name="manufacturer" value="Google" />
-          <option name="name" value="Pixel 9 Pro" />
-          <option name="screenDensity" value="360" />
-          <option name="screenX" value="960" />
-          <option name="screenY" value="2142" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="34" />
-          <option name="brand" value="google" />
-          <option name="codename" value="comet" />
-          <option name="id" value="comet" />
-          <option name="manufacturer" value="Google" />
-          <option name="name" value="Pixel 9 Pro Fold" />
-          <option name="screenDensity" value="390" />
-          <option name="screenX" value="2076" />
-          <option name="screenY" value="2152" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="29" />
-          <option name="brand" value="samsung" />
-          <option name="codename" value="crownqlteue" />
-          <option name="id" value="crownqlteue" />
-          <option name="manufacturer" value="Samsung" />
-          <option name="name" value="Galaxy Note9" />
-          <option name="screenDensity" value="420" />
-          <option name="screenX" value="2220" />
-          <option name="screenY" value="1080" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="34" />
-          <option name="brand" value="samsung" />
-          <option name="codename" value="dm3q" />
-          <option name="id" value="dm3q" />
-          <option name="manufacturer" value="Samsung" />
-          <option name="name" value="Galaxy S23 Ultra" />
-          <option name="screenDensity" value="600" />
-          <option name="screenX" value="1440" />
-          <option name="screenY" value="3088" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="34" />
-          <option name="brand" value="samsung" />
-          <option name="codename" value="e1q" />
-          <option name="id" value="e1q" />
-          <option name="manufacturer" value="Samsung" />
-          <option name="name" value="Galaxy S24" />
-          <option name="screenDensity" value="480" />
-          <option name="screenX" value="1080" />
-          <option name="screenY" value="2340" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="33" />
-          <option name="brand" value="google" />
-          <option name="codename" value="felix" />
-          <option name="id" value="felix" />
-          <option name="manufacturer" value="Google" />
-          <option name="name" value="Pixel Fold" />
-          <option name="screenDensity" value="420" />
-          <option name="screenX" value="2208" />
-          <option name="screenY" value="1840" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="34" />
-          <option name="brand" value="google" />
-          <option name="codename" value="felix" />
-          <option name="id" value="felix" />
-          <option name="manufacturer" value="Google" />
-          <option name="name" value="Pixel Fold" />
-          <option name="screenDensity" value="420" />
-          <option name="screenX" value="2208" />
-          <option name="screenY" value="1840" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="33" />
-          <option name="brand" value="google" />
-          <option name="codename" value="felix_camera" />
-          <option name="id" value="felix_camera" />
-          <option name="manufacturer" value="Google" />
-          <option name="name" value="Pixel Fold (Camera-enabled)" />
-          <option name="screenDensity" value="420" />
-          <option name="screenX" value="2208" />
-          <option name="screenY" value="1840" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="33" />
-          <option name="brand" value="samsung" />
-          <option name="codename" value="gts8uwifi" />
-          <option name="id" value="gts8uwifi" />
-          <option name="manufacturer" value="Samsung" />
-          <option name="name" value="Galaxy Tab S8 Ultra" />
-          <option name="screenDensity" value="320" />
-          <option name="screenX" value="1848" />
-          <option name="screenY" value="2960" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="34" />
-          <option name="brand" value="google" />
-          <option name="codename" value="husky" />
-          <option name="id" value="husky" />
-          <option name="manufacturer" value="Google" />
-          <option name="name" value="Pixel 8 Pro" />
-          <option name="screenDensity" value="390" />
-          <option name="screenX" value="1008" />
-          <option name="screenY" value="2244" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="30" />
-          <option name="brand" value="motorola" />
-          <option name="codename" value="java" />
-          <option name="id" value="java" />
-          <option name="manufacturer" value="Motorola" />
-          <option name="name" value="G20" />
-          <option name="screenDensity" value="280" />
-          <option name="screenX" value="720" />
-          <option name="screenY" value="1600" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="34" />
-          <option name="brand" value="google" />
-          <option name="codename" value="komodo" />
-          <option name="id" value="komodo" />
-          <option name="manufacturer" value="Google" />
-          <option name="name" value="Pixel 9 Pro XL" />
-          <option name="screenDensity" value="360" />
-          <option name="screenX" value="1008" />
-          <option name="screenY" value="2244" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="33" />
-          <option name="brand" value="google" />
-          <option name="codename" value="lynx" />
-          <option name="id" value="lynx" />
-          <option name="manufacturer" value="Google" />
-          <option name="name" value="Pixel 7a" />
-          <option name="screenDensity" value="420" />
-          <option name="screenX" value="1080" />
-          <option name="screenY" value="2400" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="31" />
-          <option name="brand" value="google" />
-          <option name="codename" value="oriole" />
-          <option name="id" value="oriole" />
-          <option name="manufacturer" value="Google" />
-          <option name="name" value="Pixel 6" />
-          <option name="screenDensity" value="420" />
-          <option name="screenX" value="1080" />
-          <option name="screenY" value="2400" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="33" />
-          <option name="brand" value="google" />
-          <option name="codename" value="panther" />
-          <option name="id" value="panther" />
-          <option name="manufacturer" value="Google" />
-          <option name="name" value="Pixel 7" />
-          <option name="screenDensity" value="420" />
-          <option name="screenX" value="1080" />
-          <option name="screenY" value="2400" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="34" />
-          <option name="brand" value="samsung" />
-          <option name="codename" value="q5q" />
-          <option name="id" value="q5q" />
-          <option name="manufacturer" value="Samsung" />
-          <option name="name" value="Galaxy Z Fold5" />
-          <option name="screenDensity" value="420" />
-          <option name="screenX" value="1812" />
-          <option name="screenY" value="2176" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="34" />
-          <option name="brand" value="samsung" />
-          <option name="codename" value="q6q" />
-          <option name="id" value="q6q" />
-          <option name="manufacturer" value="Samsung" />
-          <option name="name" value="Galaxy Z Fold6" />
-          <option name="screenDensity" value="420" />
-          <option name="screenX" value="1856" />
-          <option name="screenY" value="2160" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="30" />
-          <option name="brand" value="google" />
-          <option name="codename" value="r11" />
-          <option name="id" value="r11" />
-          <option name="manufacturer" value="Google" />
-          <option name="name" value="Pixel Watch" />
-          <option name="screenDensity" value="320" />
-          <option name="screenX" value="384" />
-          <option name="screenY" value="384" />
-          <option name="type" value="WEAR_OS" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="30" />
-          <option name="brand" value="google" />
-          <option name="codename" value="redfin" />
-          <option name="id" value="redfin" />
-          <option name="manufacturer" value="Google" />
-          <option name="name" value="Pixel 5" />
-          <option name="screenDensity" value="440" />
-          <option name="screenX" value="1080" />
-          <option name="screenY" value="2340" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="34" />
-          <option name="brand" value="google" />
-          <option name="codename" value="shiba" />
-          <option name="id" value="shiba" />
-          <option name="manufacturer" value="Google" />
-          <option name="name" value="Pixel 8" />
-          <option name="screenDensity" value="420" />
-          <option name="screenX" value="1080" />
-          <option name="screenY" value="2400" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="33" />
-          <option name="brand" value="google" />
-          <option name="codename" value="tangorpro" />
-          <option name="id" value="tangorpro" />
-          <option name="manufacturer" value="Google" />
-          <option name="name" value="Pixel Tablet" />
-          <option name="screenDensity" value="320" />
-          <option name="screenX" value="1600" />
-          <option name="screenY" value="2560" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="34" />
-          <option name="brand" value="google" />
-          <option name="codename" value="tokay" />
-          <option name="id" value="tokay" />
-          <option name="manufacturer" value="Google" />
-          <option name="name" value="Pixel 9" />
-          <option name="screenDensity" value="420" />
-          <option name="screenX" value="1080" />
-          <option name="screenY" value="2424" />
-        </PersistentDeviceSelectionData>
-      </list>
-    </option>
-  </component>
-</project>
\ No newline at end of file
Index: app/src/main/java/com/example/musicwhisky1/dao/MusicaDao.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.musicwhisky1.dao\r\n\r\nimport androidx.lifecycle.LiveData\r\nimport androidx.room.Dao\r\nimport androidx.room.Delete\r\nimport androidx.room.Insert\r\nimport androidx.room.Query\r\nimport androidx.room.Transaction\r\nimport androidx.room.Update\r\nimport com.example.musicwhisky.Album\r\nimport com.example.musicwhisky1.model.AlbumComMusicas\r\nimport com.example.musicwhisky1.model.Musica\r\n\r\n@Dao\r\ninterface MusicaDao {\r\n\r\n    @Insert\r\n    suspend fun inserir(musica: Musica)\r\n\r\n    // Obter todas as músicas\r\n    @Query(\"SELECT * FROM musicas\")\r\n    suspend fun buscarTodos(): List<Musica>\r\n\r\n    // Obter uma música específica pelo ID\r\n    @Query(\"SELECT * FROM musicas WHERE id = :musicaId\")\r\n    fun ListarPorId(musicaId: Int): LiveData<Musica>\r\n\r\n    @Query(\"SELECT * FROM musicas WHERE nome LIKE '%' || :nome || '%'\")\r\n    fun buscarPorNome(nome: String): LiveData<List<Musica>>\r\n\r\n\r\n    @Delete\r\n    suspend fun deletar(musica: Musica)\r\n\r\n    @Update\r\n    suspend fun atualizar(musica: Musica)\r\n\r\n    @Query(\"SELECT * FROM musicas WHERE idAlbum = :idAlbum\")\r\n    fun musicasAlbum(idAlbum: Int): List<Musica>\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/musicwhisky1/dao/MusicaDao.kt b/app/src/main/java/com/example/musicwhisky1/dao/MusicaDao.kt
--- a/app/src/main/java/com/example/musicwhisky1/dao/MusicaDao.kt	(revision 89517d98da5a77e7a990364af177ada55ea046f8)
+++ b/app/src/main/java/com/example/musicwhisky1/dao/MusicaDao.kt	(date 1732500883658)
@@ -38,5 +38,8 @@
     @Query("SELECT * FROM musicas WHERE idAlbum = :idAlbum")
     fun musicasAlbum(idAlbum: Int): List<Musica>
 
+    @Insert
+    suspend fun insert(artistas: List<Musica>)
+
 }
 
Index: app/src/main/java/com/example/musicwhisky1/dao/ArtistaDao.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.musicwhisky1.dao\r\n\r\nimport androidx.lifecycle.LiveData\r\nimport androidx.room.Dao\r\nimport androidx.room.Delete\r\nimport androidx.room.Insert\r\nimport androidx.room.OnConflictStrategy\r\nimport androidx.room.Query\r\nimport androidx.room.Update\r\nimport com.example.musicwhisky1.model.Artista\r\nimport com.example.musicwhisky1.model.Musica\r\n\r\n@Dao\r\ninterface ArtistaDao {\r\n\r\n    @Insert(onConflict = OnConflictStrategy.REPLACE)\r\n    suspend fun inserir(artista: Artista)\r\n\r\n    @Query(\"SELECT * FROM artistas WHERE id = :idArtista\")\r\n    fun buscarPorId(idArtista: Int): LiveData<Artista>\r\n\r\n    @Query(\"SELECT * FROM artistas\")\r\n    suspend fun buscarTodos(): List<Artista>\r\n\r\n    @Delete\r\n    suspend fun deletar(artista: Artista)\r\n\r\n    @Update\r\n    suspend fun atualizar(artista: Artista)\r\n\r\n    @Query(\"SELECT * FROM artistas WHERE nome LIKE '%' || :nome || '%'\")\r\n    fun buscarPorNome(nome: String): LiveData<List<Artista>>\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/musicwhisky1/dao/ArtistaDao.kt b/app/src/main/java/com/example/musicwhisky1/dao/ArtistaDao.kt
--- a/app/src/main/java/com/example/musicwhisky1/dao/ArtistaDao.kt	(revision 89517d98da5a77e7a990364af177ada55ea046f8)
+++ b/app/src/main/java/com/example/musicwhisky1/dao/ArtistaDao.kt	(date 1732500883664)
@@ -32,4 +32,7 @@
     fun buscarPorNome(nome: String): LiveData<List<Artista>>
 
 
+    @Insert
+    suspend fun insert(artistas: List<Artista>)
+
 }
\ No newline at end of file
Index: app/src/main/java/com/example/musicwhisky1/view/TelaGerenciamento.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.musicwhisky1.view\r\n\r\nimport androidx.compose.foundation.layout.*\r\nimport androidx.compose.runtime.*\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.navigation.NavController\r\nimport androidx.navigation.compose.rememberNavController\r\nimport androidx.compose.material3.Button\r\nimport androidx.compose.material3.Text\r\nimport com.example.musicwhisky1.ui.HomeIcon\r\nimport com.example.musicwhisky1.ui.SearchBar\r\n\r\n@Composable\r\nfun TelaGerenciamento(navController: NavController) {\r\n    var query by remember { mutableStateOf(\"\") }\r\n\r\n    HomeIcon(onClick = { navController.navigate(\"home\") }, iconSize = 32)\r\n\r\n    SearchBar(\r\n        query = query,\r\n        onQueryChange = { newQuery -> query = newQuery }\r\n    )\r\n\r\n    Spacer(modifier = Modifier.height(16.dp)) // Espaço entre a barra de pesquisa e os botões\r\n\r\n\r\n    Column(\r\n        modifier = Modifier.fillMaxSize(),\r\n        verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally\r\n    ) {\r\n        Button(\r\n            onClick = { navController.navigate(\"gerenciamentoArtista\") },\r\n            modifier = Modifier\r\n                .fillMaxWidth(0.8f) // Botão ocupa 80% da largura\r\n                .padding(vertical = 8.dp) // Espaçamento vertical entre botões\r\n        ) {\r\n            Text(\"Artista\")\r\n        }\r\n        Button(\r\n            onClick = { navController.navigate(\"gerenciamentoAlbum\") },\r\n            modifier = Modifier\r\n                .fillMaxWidth(0.8f)\r\n                .padding(vertical = 8.dp)\r\n        ) {\r\n            Text(\"Álbum\")\r\n        }\r\n        Button(\r\n            onClick = { navController.navigate(\"gerenciamentoMusica\") },\r\n            modifier = Modifier\r\n                .fillMaxWidth(0.8f)\r\n                .padding(vertical = 8.dp)\r\n        ) {\r\n            Text(\"Música\")\r\n        }\r\n    }\r\n}\r\n\r\n@Preview(showBackground = true)\r\n@Composable\r\nfun PreviewTelaCadastro() {\r\n    TelaGerenciamento(navController = rememberNavController())\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/musicwhisky1/view/TelaGerenciamento.kt b/app/src/main/java/com/example/musicwhisky1/view/TelaGerenciamento.kt
--- a/app/src/main/java/com/example/musicwhisky1/view/TelaGerenciamento.kt	(revision 89517d98da5a77e7a990364af177ada55ea046f8)
+++ b/app/src/main/java/com/example/musicwhisky1/view/TelaGerenciamento.kt	(date 1732567095700)
@@ -19,10 +19,6 @@
 
     HomeIcon(onClick = { navController.navigate("home") }, iconSize = 32)
 
-    SearchBar(
-        query = query,
-        onQueryChange = { newQuery -> query = newQuery }
-    )
 
     Spacer(modifier = Modifier.height(16.dp)) // Espaço entre a barra de pesquisa e os botões
 
Index: .idea/deploymentTargetSelector.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
--- a/.idea/deploymentTargetSelector.xml	(revision 89517d98da5a77e7a990364af177ada55ea046f8)
+++ b/.idea/deploymentTargetSelector.xml	(date 1732411507147)
@@ -5,6 +5,12 @@
       <SelectionState runConfigName="app">
         <option name="selectionMode" value="DROPDOWN" />
       </SelectionState>
+      <SelectionState runConfigName="TelaCadastro">
+        <option name="selectionMode" value="DROPDOWN" />
+      </SelectionState>
+      <SelectionState runConfigName="PreviewTelaCadastro">
+        <option name="selectionMode" value="DROPDOWN" />
+      </SelectionState>
     </selectionStates>
   </component>
 </project>
\ No newline at end of file
Index: app/src/main/res/values/themes.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <style name=\"Theme.Musicwhisky1\" parent=\"android:Theme.Material.Light.NoActionBar\">\r\n        <item name=\"android:textColor\">@color/black</item>\r\n        <item name=\"android:windowBackground\">@color/splash_background</item>\r\n    </style>\r\n\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/themes.xml b/app/src/main/res/values/themes.xml
--- a/app/src/main/res/values/themes.xml	(revision 89517d98da5a77e7a990364af177ada55ea046f8)
+++ b/app/src/main/res/values/themes.xml	(date 1732322939327)
@@ -4,5 +4,4 @@
         <item name="android:textColor">@color/black</item>
         <item name="android:windowBackground">@color/splash_background</item>
     </style>
-
 </resources>
\ No newline at end of file
Index: app/src/main/java/com/example/musicwhisky1/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.musicwhisky1\r\n\r\nimport android.annotation.SuppressLint\r\nimport android.os.Bundle\r\nimport androidx.activity.ComponentActivity\r\nimport androidx.activity.compose.setContent\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.example.musicwhisky1.ui.theme.Musicwhisky1Theme\r\nimport com.example.musicwhisky1.view.AppNavigation\r\nimport com.example.mvvm2.model.database.AppDB\r\n\r\nclass MainActivity : ComponentActivity() {\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n\r\n        val database = AppDB.getDatabase(applicationContext)\r\n        val artistaDao = database.artistaDao()\r\n        val albumDao = database.albumDao()\r\n        val musicaDao = database.musicaDao()\r\n\r\n        setContent {\r\n            Musicwhisky1Theme (darkTheme = true){\r\n                val navController = rememberNavController()\r\n\r\n                AppNavigation(\r\n                    navController = navController,\r\n                    artistaDao = artistaDao,\r\n                    albumDao = albumDao,\r\n                    musicaDao = musicaDao\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/musicwhisky1/MainActivity.kt b/app/src/main/java/com/example/musicwhisky1/MainActivity.kt
--- a/app/src/main/java/com/example/musicwhisky1/MainActivity.kt	(revision 89517d98da5a77e7a990364af177ada55ea046f8)
+++ b/app/src/main/java/com/example/musicwhisky1/MainActivity.kt	(date 1732579398860)
@@ -8,31 +8,42 @@
 import androidx.compose.material3.Scaffold
 import androidx.compose.runtime.Composable
 import androidx.compose.ui.Modifier
+import androidx.lifecycle.viewmodel.compose.viewModel
 import androidx.navigation.compose.rememberNavController
 import com.example.musicwhisky1.ui.theme.Musicwhisky1Theme
 import com.example.musicwhisky1.view.AppNavigation
+import com.example.musicwhisky1.viewmodel.SpotifyVM
+import com.example.musicwhisky1.viewmodel.SpotifyVMFactory
 import com.example.mvvm2.model.database.AppDB
 
 class MainActivity : ComponentActivity() {
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
 
+        // Inicialização do banco de dados
         val database = AppDB.getDatabase(applicationContext)
         val artistaDao = database.artistaDao()
         val albumDao = database.albumDao()
         val musicaDao = database.musicaDao()
 
+        // Configuração da interface do usuário
         setContent {
-            Musicwhisky1Theme (darkTheme = true){
+            Musicwhisky1Theme(darkTheme = true) {
+                // Controlador de navegação
                 val navController = rememberNavController()
 
+                // Inicialização da ViewModel do Spotify dentro do @Composable
+                val spotifyVM: SpotifyVM = viewModel(factory = SpotifyVMFactory())
+
+                // Navegação do aplicativo
                 AppNavigation(
                     navController = navController,
                     artistaDao = artistaDao,
                     albumDao = albumDao,
-                    musicaDao = musicaDao
+                    musicaDao = musicaDao,
+                    spotifyVM = spotifyVM // Passando a ViewModel aqui
                 )
             }
         }
     }
-}
+}
\ No newline at end of file
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"gradleJvm\" value=\"#GRADLE_LOCAL_JAVA_HOME\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveExternalAnnotations\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
--- a/.idea/gradle.xml	(revision 89517d98da5a77e7a990364af177ada55ea046f8)
+++ b/.idea/gradle.xml	(date 1732322939358)
@@ -1,5 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="GradleMigrationSettings" migrationVersion="1" />
   <component name="GradleSettings">
     <option name="linkedExternalProjectsSettings">
       <GradleProjectSettings>
Index: app/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id(\"com.android.application\")\r\n    id(\"org.jetbrains.kotlin.android\")\r\n    id(\"com.google.devtools.ksp\")\r\n}\r\n\r\nandroid {\r\n    namespace = \"com.example.musicwhisky1\"\r\n    compileSdk = 35\r\n\r\n    defaultConfig {\r\n        applicationId = \"com.example.musicwhisky1\"\r\n        minSdk = 30\r\n        targetSdk = 34\r\n        versionCode = 1\r\n        versionName = \"1.0\"\r\n\r\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\r\n        vectorDrawables {\r\n            useSupportLibrary = true\r\n        }\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            isMinifyEnabled = false\r\n            proguardFiles(\r\n                getDefaultProguardFile(\"proguard-android-optimize.txt\"),\r\n                \"proguard-rules.pro\"\r\n            )\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = JavaVersion.VERSION_1_8\r\n        targetCompatibility = JavaVersion.VERSION_1_8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = \"1.8\"\r\n    }\r\n    buildFeatures {\r\n        compose = true\r\n    }\r\n    composeOptions {\r\n        kotlinCompilerExtensionVersion = \"1.5.1\"\r\n    }\r\n    packaging {\r\n        resources {\r\n            excludes += \"/META-INF/{AL2.0,LGPL2.1}\"\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n    val roomVersion = \"2.6.1\"\r\n\r\n    // Room Database\r\n    implementation(\"androidx.room:room-runtime:$roomVersion\")\r\n    ksp(\"androidx.room:room-compiler:$roomVersion\")\r\n    implementation(\"androidx.room:room-ktx:$roomVersion\")\r\n\r\n    // Retrofit & OkHttp\r\n    implementation(\"com.squareup.retrofit2:retrofit:2.9.0\")\r\n    implementation(\"com.squareup.retrofit2:converter-gson:2.9.0\")\r\n    implementation(\"com.squareup.okhttp3:logging-interceptor:4.10.0\")\r\n\r\n\r\n    // Viewmodel\r\n    implementation(\"androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1\")\r\n    implementation(\"androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1\")\r\n\r\n    // Navigation do JetpackCompose\r\n    implementation (\"androidx.navigation:navigation-compose:2.8.0\")\r\n\r\n    // Material 3 para elementos de interface\r\n    implementation(\"androidx.compose.material3:material3:1.0.0\")\r\n    \r\n    implementation(libs.androidx.core.ktx)\r\n    implementation(libs.androidx.lifecycle.runtime.ktx)\r\n    implementation(libs.androidx.activity.compose)\r\n    implementation(platform(libs.androidx.compose.bom))\r\n    implementation(libs.androidx.ui)\r\n    implementation(libs.androidx.ui.graphics)\r\n    implementation(libs.androidx.ui.tooling.preview)\r\n    implementation(libs.androidx.material3)\r\n    testImplementation(libs.junit)\r\n    androidTestImplementation(libs.androidx.junit)\r\n    androidTestImplementation(libs.androidx.espresso.core)\r\n    androidTestImplementation(platform(libs.androidx.compose.bom))\r\n    androidTestImplementation(libs.androidx.ui.test.junit4)\r\n    debugImplementation(libs.androidx.ui.tooling)\r\n    debugImplementation(libs.androidx.ui.test.manifest)\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle.kts b/app/build.gradle.kts
--- a/app/build.gradle.kts	(revision 89517d98da5a77e7a990364af177ada55ea046f8)
+++ b/app/build.gradle.kts	(date 1732568658905)
@@ -51,13 +51,14 @@
 }
 
 dependencies {
+
     val roomVersion = "2.6.1"
 
     // Room Database
     implementation("androidx.room:room-runtime:$roomVersion")
-    ksp("androidx.room:room-compiler:$roomVersion")
+    annotationProcessor("androidx.room:room-compiler:$roomVersion")
     implementation("androidx.room:room-ktx:$roomVersion")
-
+    ksp("androidx.room:room-compiler:$roomVersion")
     // Retrofit & OkHttp
     implementation("com.squareup.retrofit2:retrofit:2.9.0")
     implementation("com.squareup.retrofit2:converter-gson:2.9.0")
@@ -70,10 +71,9 @@
 
     // Navigation do JetpackCompose
     implementation ("androidx.navigation:navigation-compose:2.8.0")
-
-    // Material 3 para elementos de interface
+    implementation("io.coil-kt:coil-compose:2.2.2")
     implementation("androidx.compose.material3:material3:1.0.0")
-    
+    implementation("androidx.activity:activity-compose:1.7.0")
     implementation(libs.androidx.core.ktx)
     implementation(libs.androidx.lifecycle.runtime.ktx)
     implementation(libs.androidx.activity.compose)
Index: app/src/main/java/com/example/musicwhisky1/ui/SearchBar.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.musicwhisky1.ui\r\n\r\nimport androidx.compose.foundation.layout.Box\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.height\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.Search\r\nimport androidx.compose.material3.*\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.setValue\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.compose.ui.text.TextStyle\r\n\r\n@Composable\r\nfun SearchBar(\r\n    query: String,\r\n    onQueryChange: (String) -> Unit,\r\n    modifier: Modifier = Modifier\r\n) {\r\n    Column(\r\n        modifier = modifier\r\n            .fillMaxWidth()\r\n            .padding(top = 18.dp),\r\n        horizontalAlignment = Alignment.CenterHorizontally\r\n    ) {\r\n        Box(\r\n            contentAlignment = Alignment.Center\r\n        ) {\r\n            TextField(\r\n                value = query,\r\n                onValueChange = onQueryChange,\r\n                placeholder = {\r\n                    Text(\r\n                        text = \"Pesquisar...\",\r\n                        fontSize = 12.sp,\r\n                    )\r\n                },\r\n                modifier = Modifier\r\n                    .fillMaxWidth(0.6f),\r\n                singleLine = true,\r\n                leadingIcon = {\r\n                    Icon(\r\n                        imageVector = Icons.Default.Search,\r\n                        contentDescription = \"Pesquisar\",\r\n                        modifier = Modifier.size(14.dp)\r\n                    )\r\n                },\r\n                shape = RoundedCornerShape(15.dp),\r\n                textStyle = TextStyle(\r\n                    color = Color.White,\r\n                    fontSize = 14.sp\r\n                ),\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n@Preview(showBackground = true)\r\n@Composable\r\nfun SearchBarPreview() {\r\n    var query by remember { mutableStateOf(\"\") }\r\n    SearchBar(\r\n        query = query,\r\n        onQueryChange = { newQuery -> query = newQuery }\r\n    )\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/musicwhisky1/ui/SearchBar.kt b/app/src/main/java/com/example/musicwhisky1/ui/SearchBar.kt
--- a/app/src/main/java/com/example/musicwhisky1/ui/SearchBar.kt	(revision 89517d98da5a77e7a990364af177ada55ea046f8)
+++ b/app/src/main/java/com/example/musicwhisky1/ui/SearchBar.kt	(date 1732592699292)
@@ -1,32 +1,26 @@
 package com.example.musicwhisky1.ui
 
-import androidx.compose.foundation.layout.Box
-import androidx.compose.foundation.layout.Column
-import androidx.compose.foundation.layout.fillMaxWidth
-import androidx.compose.foundation.layout.height
-import androidx.compose.foundation.layout.padding
-import androidx.compose.foundation.layout.size
+import androidx.compose.foundation.layout.*
 import androidx.compose.foundation.shape.RoundedCornerShape
+import androidx.compose.foundation.text.KeyboardActions
+import androidx.compose.foundation.text.KeyboardOptions
 import androidx.compose.material.icons.Icons
 import androidx.compose.material.icons.filled.Search
 import androidx.compose.material3.*
 import androidx.compose.runtime.Composable
-import androidx.compose.runtime.getValue
-import androidx.compose.runtime.remember
-import androidx.compose.runtime.mutableStateOf
-import androidx.compose.runtime.setValue
 import androidx.compose.ui.Alignment
 import androidx.compose.ui.Modifier
 import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.tooling.preview.Preview
+import androidx.compose.ui.text.TextStyle
+import androidx.compose.ui.text.input.ImeAction
 import androidx.compose.ui.unit.dp
 import androidx.compose.ui.unit.sp
-import androidx.compose.ui.text.TextStyle
 
 @Composable
 fun SearchBar(
     query: String,
     onQueryChange: (String) -> Unit,
+    onSearch: (String) -> Unit,  // Recebe a função de pesquisa como parâmetro
     modifier: Modifier = Modifier
 ) {
     Column(
@@ -35,46 +29,36 @@
             .padding(top = 18.dp),
         horizontalAlignment = Alignment.CenterHorizontally
     ) {
-        Box(
-            contentAlignment = Alignment.Center
-        ) {
-            TextField(
-                value = query,
-                onValueChange = onQueryChange,
-                placeholder = {
-                    Text(
-                        text = "Pesquisar...",
-                        fontSize = 12.sp,
-                    )
-                },
-                modifier = Modifier
-                    .fillMaxWidth(0.6f),
-                singleLine = true,
-                leadingIcon = {
-                    Icon(
-                        imageVector = Icons.Default.Search,
-                        contentDescription = "Pesquisar",
-                        modifier = Modifier.size(14.dp)
-                    )
-                },
-                shape = RoundedCornerShape(15.dp),
-                textStyle = TextStyle(
-                    color = Color.White,
-                    fontSize = 14.sp
-                ),
-            )
-        }
-    }
-}
-
-
-
-@Preview(showBackground = true)
-@Composable
-fun SearchBarPreview() {
-    var query by remember { mutableStateOf("") }
-    SearchBar(
-        query = query,
-        onQueryChange = { newQuery -> query = newQuery }
-    )
-}
+        TextField(
+            value = query,
+            onValueChange = onQueryChange,
+            placeholder = {
+                Text(
+                    text = "Pesquisar...",
+                    fontSize = 12.sp,
+                )
+            },
+            modifier = Modifier
+                .fillMaxWidth(0.6f),
+            singleLine = true,
+            leadingIcon = {
+                Icon(
+                    imageVector = Icons.Default.Search,
+                    contentDescription = "Pesquisar",
+                    modifier = Modifier.size(14.dp)
+                )
+            },
+            shape = RoundedCornerShape(15.dp),
+            textStyle = TextStyle(
+                color = Color.White,
+                fontSize = 14.sp
+            ),
+            keyboardOptions = KeyboardOptions.Default.copy(
+                imeAction = ImeAction.Search
+            ),
+            keyboardActions = KeyboardActions(
+                onSearch = { onSearch(query) }
+            ),
+        )
+    }
+}
\ No newline at end of file
Index: gradle/libs.versions.toml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[versions]\r\nagp = \"8.6.0\"\r\nkotlin = \"1.9.0\"\r\ncoreKtx = \"1.15.0\"\r\njunit = \"4.13.2\"\r\njunitVersion = \"1.2.1\"\r\nespressoCore = \"3.6.1\"\r\nlifecycleRuntimeKtx = \"2.8.7\"\r\nactivityCompose = \"1.9.3\"\r\ncomposeBom = \"2024.04.01\"\r\n\r\n[libraries]\r\nandroidx-core-ktx = { group = \"androidx.core\", name = \"core-ktx\", version.ref = \"coreKtx\" }\r\njunit = { group = \"junit\", name = \"junit\", version.ref = \"junit\" }\r\nandroidx-junit = { group = \"androidx.test.ext\", name = \"junit\", version.ref = \"junitVersion\" }\r\nandroidx-espresso-core = { group = \"androidx.test.espresso\", name = \"espresso-core\", version.ref = \"espressoCore\" }\r\nandroidx-lifecycle-runtime-ktx = { group = \"androidx.lifecycle\", name = \"lifecycle-runtime-ktx\", version.ref = \"lifecycleRuntimeKtx\" }\r\nandroidx-activity-compose = { group = \"androidx.activity\", name = \"activity-compose\", version.ref = \"activityCompose\" }\r\nandroidx-compose-bom = { group = \"androidx.compose\", name = \"compose-bom\", version.ref = \"composeBom\" }\r\nandroidx-ui = { group = \"androidx.compose.ui\", name = \"ui\" }\r\nandroidx-ui-graphics = { group = \"androidx.compose.ui\", name = \"ui-graphics\" }\r\nandroidx-ui-tooling = { group = \"androidx.compose.ui\", name = \"ui-tooling\" }\r\nandroidx-ui-tooling-preview = { group = \"androidx.compose.ui\", name = \"ui-tooling-preview\" }\r\nandroidx-ui-test-manifest = { group = \"androidx.compose.ui\", name = \"ui-test-manifest\" }\r\nandroidx-ui-test-junit4 = { group = \"androidx.compose.ui\", name = \"ui-test-junit4\" }\r\nandroidx-material3 = { group = \"androidx.compose.material3\", name = \"material3\" }\r\n\r\n[plugins]\r\nandroid-application = { id = \"com.android.application\", version.ref = \"agp\" }\r\nkotlin-android = { id = \"org.jetbrains.kotlin.android\", version.ref = \"kotlin\" }\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
--- a/gradle/libs.versions.toml	(revision 89517d98da5a77e7a990364af177ada55ea046f8)
+++ b/gradle/libs.versions.toml	(date 1732500523628)
@@ -8,6 +8,7 @@
 lifecycleRuntimeKtx = "2.8.7"
 activityCompose = "1.9.3"
 composeBom = "2024.04.01"
+uiDesktop = "1.7.0"
 
 [libraries]
 androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
@@ -24,6 +25,7 @@
 androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
 androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
 androidx-material3 = { group = "androidx.compose.material3", name = "material3" }
+androidx-ui-desktop = { group = "androidx.compose.ui", name = "ui-desktop", version.ref = "uiDesktop" }
 
 [plugins]
 android-application = { id = "com.android.application", version.ref = "agp" }
Index: app/src/main/java/com/example/musicwhisky1/dao/AlbumDao.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.musicwhisky1.dao\r\n\r\nimport androidx.lifecycle.LiveData\r\nimport androidx.room.Dao\r\nimport androidx.room.Delete\r\nimport androidx.room.Insert\r\nimport androidx.room.OnConflictStrategy\r\nimport androidx.room.Query\r\nimport androidx.room.Transaction\r\nimport androidx.room.Update\r\nimport com.example.app.entidades.AlbumMusicaCrossRef\r\nimport com.example.musicwhisky.Album\r\nimport com.example.musicwhisky1.model.AlbumComMusicas\r\nimport com.example.musicwhisky1.model.Artista\r\n\r\n@Dao\r\ninterface AlbumDao {\r\n    // Inserir Album\r\n    @Insert(onConflict = OnConflictStrategy.REPLACE)\r\n    suspend fun inserir(album: Album)\r\n\r\n    // Obter todos os álbuns\r\n    @Query(\"SELECT * FROM albuns\")\r\n    suspend fun buscarTodos(): List<Album>\r\n\r\n    //Obeter um album especifico pelo Id\r\n    @Query(\"SELECT * FROM albuns WHERE id =:albumId\")\r\n    fun listarPorId( albumId: Int): LiveData<Album>\r\n\r\n    @Delete\r\n    suspend fun deletar(album: Album)\r\n\r\n    @Update\r\n    suspend fun atualizar(album: Album)\r\n    @Transaction\r\n    @Query(\"SELECT * FROM albuns\")\r\n    fun listarAlbumComMusicas() : List<AlbumComMusicas>\r\n\r\n    @Query(\"SELECT * FROM albuns WHERE id = :id\")\r\n    fun buscarPorId(id: Int): LiveData<Album>\r\n\r\n    @Query(\"SELECT * FROM albuns WHERE nome LIKE '%' || :nome || '%'\")\r\n    fun buscarPorNome(nome: String): LiveData<List<Album>>\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/musicwhisky1/dao/AlbumDao.kt b/app/src/main/java/com/example/musicwhisky1/dao/AlbumDao.kt
--- a/app/src/main/java/com/example/musicwhisky1/dao/AlbumDao.kt	(revision 89517d98da5a77e7a990364af177ada55ea046f8)
+++ b/app/src/main/java/com/example/musicwhisky1/dao/AlbumDao.kt	(date 1732500883670)
@@ -42,4 +42,7 @@
     @Query("SELECT * FROM albuns WHERE nome LIKE '%' || :nome || '%'")
     fun buscarPorNome(nome: String): LiveData<List<Album>>
 
+    @Insert
+    suspend fun insert(artistas: List<Album>)
+
 }
\ No newline at end of file
Index: .idea/inspectionProfiles/Project_Default.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"InspectionProjectProfileManager\">\r\n  <profile version=\"1.0\">\r\n    <option name=\"myName\" value=\"Project Default\" />\r\n    <inspection_tool class=\"PreviewAnnotationInFunctionWithParameters\" enabled=\"true\" level=\"ERROR\" enabled_by_default=\"true\">\r\n      <option name=\"composableFile\" value=\"true\" />\r\n      <option name=\"previewFile\" value=\"true\" />\r\n    </inspection_tool>\r\n    <inspection_tool class=\"PreviewApiLevelMustBeValid\" enabled=\"true\" level=\"ERROR\" enabled_by_default=\"true\">\r\n      <option name=\"composableFile\" value=\"true\" />\r\n      <option name=\"previewFile\" value=\"true\" />\r\n    </inspection_tool>\r\n    <inspection_tool class=\"PreviewDimensionRespectsLimit\" enabled=\"true\" level=\"WARNING\" enabled_by_default=\"true\">\r\n      <option name=\"composableFile\" value=\"true\" />\r\n      <option name=\"previewFile\" value=\"true\" />\r\n    </inspection_tool>\r\n    <inspection_tool class=\"PreviewFontScaleMustBeGreaterThanZero\" enabled=\"true\" level=\"ERROR\" enabled_by_default=\"true\">\r\n      <option name=\"composableFile\" value=\"true\" />\r\n      <option name=\"previewFile\" value=\"true\" />\r\n    </inspection_tool>\r\n    <inspection_tool class=\"PreviewMultipleParameterProviders\" enabled=\"true\" level=\"ERROR\" enabled_by_default=\"true\">\r\n      <option name=\"composableFile\" value=\"true\" />\r\n      <option name=\"previewFile\" value=\"true\" />\r\n    </inspection_tool>\r\n    <inspection_tool class=\"PreviewMustBeTopLevelFunction\" enabled=\"true\" level=\"ERROR\" enabled_by_default=\"true\">\r\n      <option name=\"composableFile\" value=\"true\" />\r\n      <option name=\"previewFile\" value=\"true\" />\r\n    </inspection_tool>\r\n    <inspection_tool class=\"PreviewNeedsComposableAnnotation\" enabled=\"true\" level=\"ERROR\" enabled_by_default=\"true\">\r\n      <option name=\"composableFile\" value=\"true\" />\r\n      <option name=\"previewFile\" value=\"true\" />\r\n    </inspection_tool>\r\n    <inspection_tool class=\"PreviewNotSupportedInUnitTestFiles\" enabled=\"true\" level=\"ERROR\" enabled_by_default=\"true\">\r\n      <option name=\"composableFile\" value=\"true\" />\r\n      <option name=\"previewFile\" value=\"true\" />\r\n    </inspection_tool>\r\n    <inspection_tool class=\"PreviewPickerAnnotation\" enabled=\"true\" level=\"ERROR\" enabled_by_default=\"true\">\r\n      <option name=\"composableFile\" value=\"true\" />\r\n      <option name=\"previewFile\" value=\"true\" />\r\n    </inspection_tool>\r\n  </profile>\r\n</component>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
--- a/.idea/inspectionProfiles/Project_Default.xml	(revision 89517d98da5a77e7a990364af177ada55ea046f8)
+++ b/.idea/inspectionProfiles/Project_Default.xml	(date 1732374093103)
@@ -1,6 +1,34 @@
 <component name="InspectionProjectProfileManager">
   <profile version="1.0">
     <option name="myName" value="Project Default" />
+    <inspection_tool class="ComposePreviewDimensionRespectsLimit" enabled="true" level="WARNING" enabled_by_default="true">
+      <option name="composableFile" value="true" />
+      <option name="previewFile" value="true" />
+    </inspection_tool>
+    <inspection_tool class="ComposePreviewMustBeTopLevelFunction" enabled="true" level="ERROR" enabled_by_default="true">
+      <option name="composableFile" value="true" />
+      <option name="previewFile" value="true" />
+    </inspection_tool>
+    <inspection_tool class="ComposePreviewNeedsComposableAnnotation" enabled="true" level="ERROR" enabled_by_default="true">
+      <option name="composableFile" value="true" />
+      <option name="previewFile" value="true" />
+    </inspection_tool>
+    <inspection_tool class="ComposePreviewNotSupportedInUnitTestFiles" enabled="true" level="ERROR" enabled_by_default="true">
+      <option name="composableFile" value="true" />
+      <option name="previewFile" value="true" />
+    </inspection_tool>
+    <inspection_tool class="GlancePreviewDimensionRespectsLimit" enabled="true" level="WARNING" enabled_by_default="true">
+      <option name="composableFile" value="true" />
+    </inspection_tool>
+    <inspection_tool class="GlancePreviewMustBeTopLevelFunction" enabled="true" level="ERROR" enabled_by_default="true">
+      <option name="composableFile" value="true" />
+    </inspection_tool>
+    <inspection_tool class="GlancePreviewNeedsComposableAnnotation" enabled="true" level="ERROR" enabled_by_default="true">
+      <option name="composableFile" value="true" />
+    </inspection_tool>
+    <inspection_tool class="GlancePreviewNotSupportedInUnitTestFiles" enabled="true" level="ERROR" enabled_by_default="true">
+      <option name="composableFile" value="true" />
+    </inspection_tool>
     <inspection_tool class="PreviewAnnotationInFunctionWithParameters" enabled="true" level="ERROR" enabled_by_default="true">
       <option name="composableFile" value="true" />
       <option name="previewFile" value="true" />
@@ -36,6 +64,11 @@
     <inspection_tool class="PreviewPickerAnnotation" enabled="true" level="ERROR" enabled_by_default="true">
       <option name="composableFile" value="true" />
       <option name="previewFile" value="true" />
+    </inspection_tool>
+    <inspection_tool class="SpellCheckingInspection" enabled="false" level="TYPO" enabled_by_default="false">
+      <option name="processCode" value="true" />
+      <option name="processLiterals" value="true" />
+      <option name="processComments" value="true" />
     </inspection_tool>
   </profile>
 </component>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_17\" default=\"true\" project-jdk-name=\"jbr-17\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 89517d98da5a77e7a990364af177ada55ea046f8)
+++ b/.idea/misc.xml	(date 1732411621563)
@@ -1,4 +1,3 @@
-<?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ExternalStorageConfigurationManager" enabled="true" />
   <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="jbr-17" project-jdk-type="JavaSDK">
Index: app/src/main/java/com/example/musicwhisky1/database/AppDB.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.mvvm2.model.database\r\n\r\nimport android.content.Context\r\nimport androidx.room.Database\r\nimport androidx.room.Room\r\nimport androidx.room.RoomDatabase\r\nimport androidx.room.migration.Migration\r\nimport androidx.sqlite.db.SupportSQLiteDatabase\r\nimport com.example.musicwhisky.Album\r\nimport com.example.musicwhisky1.dao.AlbumDao\r\nimport com.example.musicwhisky1.dao.ArtistaDao\r\nimport com.example.musicwhisky1.dao.MusicaDao\r\nimport com.example.musicwhisky1.model.Musica\r\nimport com.example.musicwhisky1.model.Artista\r\n\r\n@Database(entities = [Artista::class, Musica::class, Album::class], version = 3)\r\nabstract class AppDB : RoomDatabase() {\r\n\r\n    abstract fun artistaDao(): ArtistaDao\r\n    abstract fun musicaDao(): MusicaDao\r\n    abstract fun albumDao(): AlbumDao\r\n\r\n    companion object {\r\n        @Volatile\r\n        private var INSTANCE: AppDB? = null\r\n\r\n        fun getDatabase(context: Context): AppDB {\r\n            return INSTANCE ?: synchronized(this) {\r\n                val instance = Room.databaseBuilder(\r\n                    context.applicationContext,\r\n                    AppDB::class.java,\r\n                    \"musicwhisky.db\"\r\n                )\r\n                    // Usar fallbackToDestructiveMigration para recriar o banco de dados a cada mudança de versão\r\n                    .fallbackToDestructiveMigration() // Isso garante que o banco de dados será excluído e recriado\r\n                    .build()\r\n                INSTANCE = instance\r\n                instance\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/musicwhisky1/database/AppDB.kt b/app/src/main/java/com/example/musicwhisky1/database/AppDB.kt
--- a/app/src/main/java/com/example/musicwhisky1/database/AppDB.kt	(revision 89517d98da5a77e7a990364af177ada55ea046f8)
+++ b/app/src/main/java/com/example/musicwhisky1/database/AppDB.kt	(date 1732501809417)
@@ -31,13 +31,11 @@
                     AppDB::class.java,
                     "musicwhisky.db"
                 )
-                    // Usar fallbackToDestructiveMigration para recriar o banco de dados a cada mudança de versão
-                    .fallbackToDestructiveMigration() // Isso garante que o banco de dados será excluído e recriado
+                    .fallbackToDestructiveMigration()
                     .build()
                 INSTANCE = instance
                 instance
             }
         }
     }
-}
-
+}
\ No newline at end of file
